<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Java | 一个人的世界]]></title>
  <link href="http://dawndiy.github.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://dawndiy.github.com/"/>
  <updated>2013-03-17T02:31:28+08:00</updated>
  <id>http://dawndiy.github.com/</id>
  <author>
    <name><![CDATA[DawnDIY]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux 下安装配置 JDK7]]></title>
    <link href="http://dawndiy.github.com/archives/155"/>
    <updated>2012-07-31T00:00:00+08:00</updated>
    <id>http://dawndiy.github.com/archives/install-and-configurate-jdk7-in-linux</id>
    <content type="html"><![CDATA[<h1></h1>

<p>自从从Oracle收购Sun近三年来，已经有很多变化。早在8月，甲骨文将“Operating System Distributor License for Java”许可证终结，这意味着第三方将不可以依据这一许可分发他们的软件包。<br/>
<strong>　　</strong>因此Ubuntu Linux已经开始禁用所有机器上的Oracle JDK浏览器插件，并很快会从档案中删除软件包。<br/>
公司指出，禁用Oracle的插件将可以帮助提高安全性，因为这些插件已经被证实包含许多漏洞，虽然这是一个事实，但真正的原因恐怕是Sun的 JDK在升级时会清理掉用户机器上自认为不安全的软件，大多数PC用户认为这样很安全，但通常基于UNIX系统的用户并不这么认为。<br/>
Oracle的JDK被废弃后，OpenJDK将取代它的位置在Ubuntu及其它Linux中默认安装。</p>

<p>虽然很多Linux发行版现在已经自带OpenJDK，但是在开发过程中与Oracle-JDK(SUN-JDK)还是略有不同。通常，Java开发人员还是以Oracle-JDK为标准来进行开发。<br/>
下面介绍一下Linux下的JDK安装与配置，这里使用的Linux发行版是Ubuntu 12.04。</p>

<h2>1.下载JDK</h2>

<p>目前最新的JDK版本是：Java SE Development Kit 7u5</p>

<p>下载地址：</p>

<p>查看最新：</p>

<h2>2.解压安装</h2>

<p>我们把JDK安装到这个路径：/usr/lib/jvm<br/>
如果没有这个目录（第一次当然没有），我们就新建一个目录</p>

<pre><code>cd /usr/lib
sudo mkdir jvm
</code></pre>

<p>建立好了以后，我们来到刚才下载好的压缩包的目录，解压到我们刚才新建的文件夹里面去，并且修改好名字方便我们管理</p>

<pre><code>sudo tar zxvf ./jdk-7-linux-i586.tar.gz  -C /usr/lib/jvm
cd /usr/lib/jvm
sudo mv jdk1.7.0_05/ jdk7
</code></pre>

<h2> 3.配置环境变量</h2>

<pre><code>gedit ~/.bashrc
</code></pre>

<p>在打开的文件的末尾添加</p>

<pre><code>export JAVA_HOME=/usr/lib/jvm/jdk7
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
export PATH=${JAVA_HOME}/bin:$PATH
</code></pre>

<p>保存退出，然后输入下面的命令来使之生效</p>

<pre><code>source ~/.bashrc
</code></pre>

<h2> 4.配置默认JDK</h2>

<p>由于一些Linux的发行版中已经存在默认的JDK，如OpenJDK等。所以为了使得我们刚才安装好的JDK版本能成为默认的JDK版本，我们还要进行下面的配置。<br/>
执行下面的命令：</p>

<pre><code>sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk7/bin/java 300
sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk7/bin/javac 300
</code></pre>

<p> 注意：如果以上两个命令出现找不到路径问题，只要重启一下计算机在重复上面两行代码就OK了。</p>

<p>执行下面的代码可以看到当前各种JDK版本和配置：</p>

<pre><code>sudo update-alternatives --config java
</code></pre>

<h2> 5.测试</h2>

<p>打开一个终端，输入下面命令：</p>

<pre><code>java -version
</code></pre>

<p>显示结果：</p>

<pre><code>java version "1.7.0_05"
Java(TM) SE Runtime Environment (build 1.7.0_05-b05)
Java HotSpot(TM) Server VM (build 23.1-b03, mixed mode)
</code></pre>

<p>这表示java命令已经可以运行了。</p>

<p> </p>

<p> </p>
]]></content>
  </entry>
  
</feed>
