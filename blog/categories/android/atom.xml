<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | 一个人的世界]]></title>
  <link href="http://dawndiy.github.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://dawndiy.github.com/"/>
  <updated>2013-03-07T02:03:26+08:00</updated>
  <id>http://dawndiy.github.com/</id>
  <author>
    <name><![CDATA[DawnDIY]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux 下使用 fastboot 给手机刷机]]></title>
    <link href="http://dawndiy.github.com/archives/389"/>
    <updated>2012-10-29T00:00:00+08:00</updated>
    <id>http://dawndiy.github.com/archives/use-fastboot-to-flash-phone-on-linux</id>
    <content type="html"><![CDATA[<h1></h1>

<p>近期一直都没电脑用，一直在用手机。今天看看手机的东西好杂好乱，想好好理理啦，所以准备刷下机。之前都是下好卡刷包然后卡刷的，想到之前我在电脑上配好了 Android 的开发环境，可以尝试一下在 Ubuntu 下线刷。应该很多人都是在 Windows 下线刷的吧，其实在 Linux 下一样非常简单，尤其是现在一些包还写好了脚本。</p>

<p>在 Linux 下首先应该准备一下环境，也就是 Android 开发调试环境。可以参考我之前的文章：<a href="http://www.dawndiy.com/archives/153" title="Ubuntu 下搭建 Android 开发环境(图文)">《Ubuntu 下搭建 Android 开发环境(图文)》</a> 这里其实你只是想刷机的话，看完前4点就行了。老早就配置好了环境的朋友就跳过咯~</p>

<p>接下来我们准备好你手机的线刷包，注意里面一定是解压后包含 images 文件夹的包，其余的就是一些脚本。</p>

<p>剩下的就是我们开始连接手机咯。<strong>注意：</strong>要确定你的手机 <strong>设置 > 开发人员选项 > USB 调试</strong> 勾选上了。好的，接下来使用USB数据线连接你的手机到电脑。运行下面代码：</p>

<pre><code>lsusb
</code></pre>

<p>这时候你会看到下面类似的结果：</p>

<pre><code>Bus 001 Device 002: ID 064e:a111 Suyin Corp. 
Bus 001 Device 003: ID 0bda:8189 Realtek Semiconductor Corp. RTL8187B Wireless 802.11g 54Mbps Network Adapter
Bus 002 Device 003: ID 18d1:9025 Google Inc. 
Bus 005 Device 002: ID 046d:c52b Logitech, Inc. Unifying Receiver
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 003 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 004 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 005 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 006 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 007 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
</code></pre>

<p>其中 Google Inc 这一行现实的是我的设备。你可以更具自己的手机厂商来判断那个是你的设备，在这里我们需要记录下的是 ID  18d1:9025 这一串。接下来运行下面代码：</p>

<pre><code>sudo gedit /etc/udev/rules.d/android.rules
</code></pre>

<p>在文件中添加如下信息：</p>

<pre><code>SUBSYSTEMS=="usb", ATTRS{idVendor}="18d1", ATTRS{idProduct}="9025", MODE="0666"
</code></pre>

<p>注意上面的数字和前面我们获得的那一串的对应，而最后的 MODE 是不变的。好的，修改保存好以后，给这个文件添加读和执行权限：</p>

<pre><code>sudo chmod  rx /etc/udev/rules.d/android.rules
</code></pre>

<p>接着我们就能够连接手机了，运行下来代码：</p>

<pre><code>sudo adb devices
</code></pre>

<p>然后我们会看到如下信息，成功连接手机的话会显示 device 信息：</p>

<pre><code>* daemon not running. starting it now on port 5037 *
* daemon started successfully *
List of devices attached 
bc762e7c    device
</code></pre>

<p>如果你显示 ？？？？？ 或者 没权限，可能是前面的步骤没做好，或是环境变量没有配好。而且，这里 adb 记得用 root 权限来运行，即 sudo。</p>

<p>好了，连接了，我们可以试一试，如果你动 shell 的话，你可以运行 sudo adb shell ，这样就直接在电脑上运行你 Android 手机上的 shell 命令了。</p>

<p>好了，回到正题，我们是要刷机，而且是线刷。首先线刷不是在开机状态下执行的，所以运行下面代码使得你的手机进入 fastboot 模式 准备开始线刷：</p>

<pre><code>sudo adb reboot-bootloader
</code></pre>

<p>稍等片刻手机就会重启至 Fastboot 模式，等待刷机的开始。如果你早就知道怎么进入你手机的 Fastboot 模式，你也可以省去上面的步骤直接进入 Fastboot 模式，进行下面的步骤：</p>

<pre><code>sudo fastboot devices
</code></pre>

<p>如果能够现实如下信息，表示你的电脑此时能够连接到手机的 Fastboot 模式。</p>

<pre><code>bc762e7c fastboot
</code></pre>

<p>这时候要通过 cd 命令来到你的线刷包的目录，一般线刷包里面会有 fash_all.sh这个刷机脚本，这是我们可能需要修改一下它的可执行权限：</p>

<pre><code>sudo chmod  x flash_all.sh
</code></pre>

<p>修改好权限以后，我们执行它就行了：</p>

<pre><code>sudo ./flash_all.sh
</code></pre>

<p>接下来我们看到的就是正在刷机了，等几分钟就OK了~下面是我的刷机显示时长：</p>

<pre><code>sending 'tz' (102 KB)...
OKAY [ 0.010s]
writing 'tz'...
OKAY [ 0.209s]
finished. total time: 0.219s
sending 'sbl2' (106 KB)...
OKAY [ 0.009s]
writing 'sbl2'...
OKAY [ 0.226s]
finished. total time: 0.235s
sending 'rpm' (112 KB)...
OKAY [ 0.011s]
writing 'rpm'...
OKAY [ 0.238s]
finished. total time: 0.248s
sending 'sbl3' (596 KB)...
OKAY [ 0.046s]
writing 'sbl3'...
OKAY [ 0.227s]
finished. total time: 0.274s
sending 'sbl1' (82 KB)...
OKAY [ 0.009s]
writing 'sbl1'...
OKAY [ 0.050s]
finished. total time: 0.059s
sending 'aboot' (575 KB)...
OKAY [ 0.044s]
writing 'aboot'...
OKAY [ 0.401s]
finished. total time: 0.445s
erasing 'boot'...
OKAY [ 0.009s]
finished. total time: 0.009s
sending 'misc' (8 KB)...
OKAY [ 0.003s]
writing 'misc'...
OKAY [ 0.008s]
finished. total time: 0.011s
sending 'modem' (28780 KB)...
OKAY [ 2.160s]
writing 'modem'...
OKAY [ 6.352s]
finished. total time: 8.513s
sending 'cache' (1024 KB)...
OKAY [ 0.083s]
writing 'cache'...
OKAY [ 0.352s]
finished. total time: 0.435s
sending 'system' (219136 KB)...
OKAY [ 16.157s]
writing 'system'...
OKAY [ 35.635s]
finished. total time: 51.793s
sending 'system1' (219136 KB)...
OKAY [ 15.927s]
writing 'system1'...
OKAY [ 35.692s]
finished. total time: 51.619s
sending 'recovery' (5592 KB)...
OKAY [ 0.405s]
writing 'recovery'...
OKAY [ 0.785s]
finished. total time: 1.190s
sending 'userdata' (204800 KB)...
OKAY [ 14.776s]
writing 'userdata'...
OKAY [ 31.363s]
finished. total time: 46.139s
sending 'boot1' (4430 KB)...
OKAY [ 0.328s]
writing 'boot1'...
OKAY [ 0.733s]
finished. total time: 1.061s
sending 'boot' (4430 KB)...
OKAY [ 0.320s]
writing 'boot'...
OKAY [ 1.028s]
finished. total time: 1.349s
</code></pre>

<p>OK，最后用下面代码重启一下手机你就能看到系统刷机成功了~ ^.^</p>

<pre><code>sudo fastboot reboot
</code></pre>

<p>附上我刷机的脚本：</p>

<pre><code>fastboot flash tz images/tz.mbn
fastboot flash sbl2 images/sbl2.mbn
fastboot flash rpm images/rpm.mbn
fastboot flash sbl3 images/sbl3.mbn
fastboot flash sbl1 images/sbl1.mbn
fastboot flash aboot images/emmc_appsboot.mbn
fastboot erase boot
fastboot flash misc images/misc.img
fastboot flash modem images/NON-HLOS.bin
fastboot flash cache images/cache.img.ext4
fastboot flash system images/system.img.ext4
fastboot flash system1 images/system.img.ext4
fastboot flash recovery images/recovery.img
fastboot flash userdata images/userdata.img.ext4
fastboot flash boot1 images/boot.img
fastboot flash boot images/boot.img
</code></pre>

<p>不过一般线刷包里面都会有脚本的，呵呵~ 也祝你刷机成功！！！</p>

<p>over….</p>

<p> </p>

<p> </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 手机上安装并运行 Ubuntu 12.04]]></title>
    <link href="http://dawndiy.github.com/archives/229"/>
    <updated>2012-08-16T00:00:00+08:00</updated>
    <id>http://dawndiy.github.com/archives/install-and-run-ubuntu-12-04-on-android-phone</id>
    <content type="html"><![CDATA[<h1></h1>

<ul>
<li>ubuntu.sh脚本的原地址变动了，导致下载不了，现在更新了网盘地址。小技巧：遇到一些下载失效的时候可以试一试p2p下载工具（如 easyMule、迅雷等）试一试，说不定有人分享过~*<br/>
————————————————————————————-</li>
</ul>


<p>Android 是基于Linux内核的开源操作系统，主要用在移动设备上。当然同样是基于Linux内核的操作系统，现在支持的Android的智能手机理论来说都能运行基于Linux的操作系统，比如现在流行的发行版：Ubuntu、Fedora 等等。不仅如此，现在的智能移动设备的硬件也越来越强，更为能运行Linux系统提供了良好的硬件支持。今天<a href="http://www.dawndiy.com">DawnDIY</a>就带大家来尝试一下在 Android 手机上安装 Ubuntu 12.04 操作系统。</p>

<h2>一.效果预览</h2>

<p>先上图，解个馋~这就是安装后的效果。</p>

<p><img src="http://i.imgur.com/1O2xX.png" title="Screenshot_2012-08-16-00-50-44" alt="" /></p>

<p><img src="http://i.imgur.com/8uj3J.png" title="Screenshot_2012-08-15-01-48-46" alt="" /></p>

<p><img src="http://i.imgur.com/7PY2e.png" title="Screenshot_2012-08-16-02-13-20" alt="" /></p>

<p><img src="http://i.imgur.com/Za4Rz.jpg" title="20120815004" alt="" /></p>

<p>看到上面的图了吧，这就是安装最新的 Ubuntu 12.04 在 Android 智能机上的效果。同时因为 Unity 原生就是支持触屏设备的，所以操作方面还是可以的，只不过就是屏幕小了点而已~好了，下面我来介绍一下我的安装过程。</p>

<h2>二.配置要求</h2>

<ul>
<li>设备需要root权限，并且安装了<a href="http://zh.wikipedia.org/wiki/Busybox">BusyBox</a></li>
<li>最小 1GHz 处理器(推荐)</li>
<li>Android 系统版本 2.1 或以上</li>
<li>Android 设备需要自定义的ROM固件</li>
<li>SD卡至2.5GB (安装大映像的需要3.5GB)</li>
<li>设备需要支持WIFI (这个用于其他设备通过WIFI登录)</li>
<li>支持 Ext2 文件系统(大部分 Android 设备应该都支持)</li>
</ul>


<p><strong>我的设备</strong></p>

<ul>
<li>手机型号：Mi-One Plus</li>
<li>处理器主频：1.5GHz * 2</li>
<li>SD卡：16G class 4</li>
<li>系统ROM：MIUI_v4_2.8.10</li>
<li>BusyBox版本：1.20.2</li>
</ul>


<h2>三.需要的软件</h2>

<ul>
<li>Android Terminal Emulator (终端模拟器) ：用于运行 <a href="http://zh.wikipedia.org/wiki/Shell">shell</a> 脚本     <a href="https://play.google.com/store/apps/details?id=jackpal.androidterm">Google Play</a></li>
<li>BusyBox ：用于提供 shell 命令的支持   <a href="https://play.google.com/store/apps/details?id=stericson.busybox">Google Play</a></li>
<li>Android VNC Viewer：用于 Android 设备的远程连接工具     <a href="https://play.google.com/store/apps/details?id=android.androidVNC">Google Play</a></li>
<li>Ubuntu 12.04  的映像文件：用于安装 Ubuntu 的映像文件    选择下载： <a href="http://sourceforge.net/projects/linuxonandroid/files/Ubuntu/12.04/full/ubuntu1204-v4-full.zip/download">Full</a>、<a href="http://sourceforge.net/projects/linuxonandroid/files/Ubuntu/12.04/small/ubuntu1204-v4-small.zip/download">Small</a>、<a href="http://sourceforge.net/projects/linuxonandroid/files/Ubuntu/12.04/core/ubuntu1204-v4-core.zip/download">Core</a></li>
<li>ubuntu.sh ：Ubuntu 的安装脚本    <a href="http://sourceforge.net/projects/linuxonandroid/files/Ubuntu/ubuntuV6-1-script.zip">点这里下载</a>(已失效，或用迅雷)    新地址-> <a href="http://pan.baidu.com/share/link?shareid=83492&amp;uk=2416019402" title="脚本下载">下载</a></li>
<li>bootscript.sh：Ubuntu 的启动脚本     <a href="http://sourceforge.net/projects/linuxonandroid/files/bootscript.sh/download">点这里下载</a></li>
<li>Linux Installer：Linux 安装向导(这个支持个帮助向导，可以不需要)     <a href="http://sourceforge.net/projects/linuxonandroid/files/App/Complete">点这里下载</a></li>
</ul>


<h2>四.开始安装</h2>

<p>首先您的手机需要 <a href="http://zh.wikipedia.org/wiki/Chroot">chroot</a>，也就是能够获得root权限去操作，相当于越狱。不懂的可以去 Google 一下“<a href="https://www.google.com/search?hl=zh-CN&amp;newwindow=1&amp;client=ubuntu&amp;hs=YgZ&amp;channel=fs&amp;q=Android%E8%8E%B7%E5%8F%96root%E6%9D%83%E9%99%90&amp;oq=Android%E8%8E%B7%E5%8F%96root%E6%9D%83%E9%99%90&amp;gs_l=serp.12..0.22005.22005.0.22938.1.1.0.0.0.0.210.210.2-1.1.0...0.0...1c.OT_GdyR88Do">Android获取root权限</a>”。root是前提，所以先要把这个做好，不过现在很多ROM都做的很好，比如MIUI就有很好的权限管理。</p>

<h3>1.安装文件下载</h3>

<p>首先就是下载必要的文件，上面讲到的需要的 Ubuntu 12.04 的映像文件，这个是在 sourceforge.net 上的一个叫 Linux-on-Android 的项目。我上面给的地址中有三个包可供下载：</p>

<p><img src="http://i.imgur.com/Z71id.png" title="2012-08-15 16:00:15的屏幕截图" alt="" /></p>

<p>其实下面就有英文的介绍，我就在这里简单介绍一下：</p>

<ul>
<li>full 映像包含了完整的 Ubuntu 系统，其中包括 Unity 桌面，还有很多如GIMP等常用软件，非常齐全。需要 3.5G 以上空间。</li>
<li>small 映像包含了的基本的 Ubuntu 系统，其中包括 LXDE 桌面，需要 2G 以上空间。</li>
<li>core 映像包含了基础的 Ubuntu 系统，不过这个没有GUI的，也就是没有桌面只有命令行。</li>
</ul>


<p>上面下载的就是待安装的 Ubuntu 12.04 的映像文件，然后我们安装还需要安装脚本，也就是上面说的 ubuntu.sh ，还有安装后的启动脚本 bootscript.sh 。有了这些文件后我们在手机的SD卡的根目录，新建一个文件夹取名为 ubuntu ，然后把这里我们刚才下载好的文件放到这个文件夹里面，到这里 ubuntu 文件夹里就分别有 ubuntu.img、ubuntu.sh、bootcript.sh 这三个文件了。</p>

<h3>2.安装软件</h3>

<p>先展示一下我们需要的三个软件，如图：</p>

<p><img src="http://i.imgur.com/dHA4h.png" title="Screenshot_2012-08-15-18-45-48" alt="" /></p>

<p>首先需要的是 Terminal 这个软件，也就是一个终端，通过终端我们可以用来执行很多命令和脚本。上面我给出了Google Play的地址，这个在很多地方都有的下的，还有Android VNC Viewer也可以在 Google Play 里面找到安装。</p>

<p>在这里我要说一下BusyBox，它使得你可以在 Terminal 中运行很多命令，现在很多 Android 的 Rom (我用的MIUI_v4_2.8.10也是) 的终端中很多命令都不能运行，比如 cp、mv、cut 等，但是这些都是我们脚本里面需要用到的，如果不能运行这些命令而执行脚本的话，会提示 **: not found 这样的提示。所以安装 BusyBox 可以使得这些命令都能够在终端里面执行。如果你的Rom本来够强大已经包含了BusyBox的新版本，能够运行基本的shell命令的话，那也可以不用装这个。</p>

<p>当然安装BusyBox以及后面我们在Terminal中都需要 root 权限，如果是MIUI系统的话则可以直接在 <strong>授权管理 > ROOT权限管理</strong> 里面打开该选项，然后需要root权限的时候允许就可以了。其他的系统我没用过，不过可以直接用 <strong>一键ROOT工具</strong> 来操作。</p>

<p>安装BusyBox，安装好后，打开BusyBox点击 <strong>Install</strong> 开始安装，如果弹出需要ROOT权限，点下一步允许就行，如图：</p>

<p><img src="http://i.imgur.com/SCntt.png" title="Screenshot_2012-08-15-18-49-06" alt="" /></p>

<h3>3.安装 ubuntu 12.04</h3>

<p>首先，打开 <strong>终端模拟器(Terminal)</strong> ，在光标处输入 “<strong>cd /sdcard/ubuntu</strong>”(不包括引号，注意cd后有空格)然后回车，这样就来到了刚才我们在SD卡里面新建的目录了，如图：</p>

<p><img src="http://i.imgur.com/Qlq0j.png" title="Screenshot_2012-08-16-00-18-55" alt="" /></p>

<p>然后我们可以输入命令 “<strong>ls</strong>” 然后回车，我们就可以看到当前目录下的所有文件了，看一下里面是不是我们需要的三个文件，如图：</p>

<p> <img src="http://i.imgur.com/Q2due.png" title="Screenshot_2012-08-16-00-19-15" alt="" /></p>

<p> 接下来我们就要开始运行 ubuntu.sh 这个安装脚本了，但在这之前我们需要使用 root 用户来运行这个脚本，在终端中使用命令 “<strong>su</strong>” 来切换至 root 用户权限，如果弹出授权信息点击下一步允许就行了，或者直接用 一键ROOT 来开启终端重复上面操作，成功后如图之前的“<strong>$</strong>”变成了“<strong>#</strong>”，这就说明已经获得Root权限了，如图：</p>

<p><img src="http://i.imgur.com/STeo5.png" title="Screenshot_2012-08-16-00-19-43" alt="" /></p>

<p>然后运行安装脚本，输入命令 “<strong>sh ubuntu.sh</strong>”，进行安装，如图：</p>

<p><img src="http://i.imgur.com/9hHAD.png" title="Screenshot_2012-08-16-00-41-42" alt="" /></p>

<p>然后脚本为你建立了一个名字为“<strong>ubuntu</strong>”的帐号，这里提示你需要为你的帐号设置一个密码，这个密码会在以后你操作 Ubuntu 的时候一些授权应用到，比如我在这里设置密码为：“<strong>ubuntu</strong>”，这里<strong>注意</strong>的是在终端里面输入密码是不会显示出来的，你看见光标没有动静，但实际上你已经输入进去了。回车后提示再次输入密码以保证你两次密码一样，如图：</p>

<p><img src="http://i.imgur.com/KAwLW.png" title="Screenshot_2012-08-16-00-42-01" alt="" /></p>

<p>密码设置完成后，提示是否启动<a href="http://zh.wikipedia.org/wiki/VNC">VNC</a>服务和<a href="http://zh.wikipedia.org/wiki/SSH">SSH</a>服务，我们只要输入“<strong>y</strong>”然后回车，开启了这两个服务后我们才能通过远程连接来连上系统，如图：</p>

<p><img src="http://i.imgur.com/zb3If.png" title="Screenshot_2012-08-16-00-45-39" alt="" /></p>

<p>然后提示我们输入设备屏幕的尺寸，我的屏幕是854×480的，所以我输入“<strong>852×480</strong>”（<strong>小米手机注意</strong>：小米手机是854×480的，但是后面用Android VNC 连接的时候有问题，在右边会显示一条线，所以<strong>小米手机用户最好设置成“852×480”</strong>，其他手机没有测试过，在设置的时候请注意！）。<strong>注意：</strong>这里两个数字之间的<strong>不是乘号</strong>，而是<strong>字母“xyz”的“x”</strong>，输错了不能远程连接的，如图：</p>

<p><img src="http://i.imgur.com/tNQsv.png" title="Screenshot_2012-08-16-00-46-10" alt="" /></p>

<p>如图的提示已经启动了一个新的桌面，提示是否保存你刚才的设置为默认设置，只要输入“<strong>y</strong>”即可，如图：</p>

<p><img src="http://i.imgur.com/j6jFo.png" title="Screenshot_2012-08-16-00-46-46" alt="" /></p>

<p>然后你就可以看到操作完成后光标前的字符变成了“<strong>root@localhost:~</strong>#<strong><strong>”，有没有发现。其实到这里你已经进入了 Ubuntu 12.04 系统，已经完成安装配置并启动了 Ubuntu 12.04 系统，不信？你可以输入命令 “</strong>cat /etc/issue.net</strong>” 然后回车查看当前系统是不是Ubuntu 12.04，如图：</p>

<p><img src="http://i.imgur.com/1421g.png" title="Screenshot_2012-08-16-00-46-54" alt="" /></p>

<p><img src="http://i.imgur.com/B5lNa.png" title="Screenshot_2012-08-16-00-48-30" alt="" /></p>

<h3>4.远程桌面连接</h3>

<p>当然，光用命令行当然体验不到什么，我们这时候确实是已经启动了 Ubuntu12.04 ，现在只需要用远程连接工具来连接登录桌面就能看到完整的桌面系统了。这时候我们就要用到前面安装的 <strong>Android VNC Viewer</strong> 了。按手机的<strong> Home </strong>键回到手机桌面，保持<strong>终端</strong>还在后台运行。找到 <strong>Android VNC</strong> 并且打开，然后进行一些简单的配置。<strong>Nickname</strong>，为你的连接去一个名字如“<strong>ubuntu</strong>”。<strong>Password</strong> 为 “<strong>ubuntu</strong>” 。<strong>Address</strong>是ip地址，这里我们是在同一台手机上连，所以我们填写“<strong>localhost</strong>”，当然你想在别的设备上连接当前的设备那就要填写启动时提示的地址。<strong>Port</strong> 是段口号，默认<strong> 5900</strong>。还有这里比较重要的是 <strong>Color Format</strong>，这个是连接的色彩设置，建议设置成“<strong>24-bit color (4 bpp)</strong>”，要不然画质太低的话画面就惨不忍睹了。如图：</p>

<p><img src="http://i.imgur.com/foYau.png" title="Screenshot_2012-08-16-01-38-07" alt="" /></p>

<p><img src="http://i.imgur.com/avTxQ.png" title="Screenshot_2012-08-16-01-38-17" alt="" /></p>

<p>全部设置好以后，点击 <strong>Connect</strong> 就可以连接上我们本地已经在运行的 Ubuntu 12.04 系统了，如图：</p>

<p><img src="http://i.imgur.com/1O2xX.png" title="Screenshot_2012-08-16-00-50-44" alt="" /></p>

<p>使用 <strong>LibreOffice Writer</strong> ，并且支持使用<strong>手机端输入法</strong>：</p>

<p><img src="http://i.imgur.com/7PY2e.png" title="Screenshot_2012-08-16-02-13-20" alt="" /></p>

<p>使用 <strong>LibreOffice Calc</strong>：</p>

<p><img src="http://i.imgur.com/Y2kgH.png" title="Screenshot_2012-08-16-01-36-07" alt="" /></p>

<p>使用 <strong>FireFox</strong> 打开 <strong>Google</strong>：</p>

<p><img src="http://i.imgur.com/KwsUC.png" title="Screenshot_2012-08-15-12-05-53" alt="" /></p>

<p>如果想要退出桌面连接，只需要点击手机的 <strong>菜单</strong> 键，然后选择 <strong>disconnect</strong> 就可以断开连接。</p>

<h3>5.退出 Ubuntu 12.04 系统</h3>

<p>退出 Ubuntu 系统，只需要回到刚才我们运行的终端，输入命令 “<strong>exit</strong>” 回车，等待片刻即可退出 Ubuntu 系统，再次输入 “<strong>exit</strong>” 回车 则是退出手机终端的 root 用户权限，然后再次 “<strong>exit</strong>” 回车后则是退出手机终端，这样就完全退出了，如图：</p>

<p><img src="http://i.imgur.com/9TRbM.png" title="Screenshot_2012-08-16-01-39-13" alt="" /></p>

<h3>6.下次启动</h3>

<p>下次启动的时候只需要开启<strong> 终端</strong>，然后输入 “<strong>su</strong>” 获得 root 权限，再输入 “<strong>cd /sdcard/ubuntu</strong>” 来到ubuntu文件夹下，然后在输入 “<strong>sh bootscript.sh</strong>” 运行启动脚本就可以运行启动 Ubuntu 了，需要连接桌面的话按照上面说的用<strong> Android VNC</strong> 就可以了。</p>

<h2>四.电脑端连接使用手机上的 Ubuntu 12.04</h2>

<p>到这里你一定成功在手机上跑起 Ubuntu 12.04 了吧，感觉不一样吧！还没完呢！在这里因为我们在手机上的 Ubuntu 12.04 开启了 VNC 和 SSH 服务，当然在手机连上网（最好是WIFI或局域网）了以后，我们也可以用电脑去远程连接登录到手机上的 Ubuntu 12.04 ，这样的话，我们就可以通过电脑来操作手机上的 Ubuntu 了。</p>

<p>VNC服务是与操作系统无关的，所以不管你电脑是什么系统都可以通过VNC来连接登录到手机上的 Ubuntu。在 Windows 操作系统上可以通过 <strong>VNC 客户端</strong> 来连接。因为我电脑的系统是Linux 所以我在这里只演示 Linux 下连接登录到手机的 Ubuntu。Windows的也大同小异，所以Google一下吧。</p>

<p>在Linux下，使用 <strong>Remmina 远程桌面客户端</strong> 这款工具就可以连接到按照我们上面的方法启动了 Ubuntu 的手机，其中<strong>服务器地址</strong> 就是你在手机上启动 Ubuntu 的时候，提示的 VNC 地址 。配置如图：</p>

<p><img src="http://i.imgur.com/7qtaz.png" title="2012-08-16 02:41:46的屏幕截图" alt="" /></p>

<p>点击连接，就可以连接登录到手机上的 Ubuntu 12.04 了，这样你就可以在电脑上操作手机上的 ubuntu 系统了，如图：</p>

<p><img src="http://i.imgur.com/GIUac.png" title="2012-08-16 02:47:29的屏幕截图" alt="" /></p>

<h2>五.总结</h2>

<p>Android 智能手机 装上了原生的 Ubuntu 12.04 ，这需要感谢 Zachary Powell 团队在 SourceForge 上提供的文件及脚本，不仅是 Ubuntu ，你也可以在 Android 手机上安装 Fedora、openSUSE、Debian、ArchLinux 等系统，这些系统的影响文件及脚本 Zachary Powell 团队在 SourceForge 上都有提供，感兴趣的朋友可以尝试一下！</p>

<p>说到底装上的还是原生的 Ubuntu ，但是还是挺期待 Canonical 专门为 Android 设备定制的 Ubuntu 系统，现在 Canonical 公司也已经在为 Android 设备打造专属的 Ubuntu 系统了，期待它能早日面世。相关信息可以查阅：http://www.ubuntu.com/devices/android</p>

<p><strong>作者：<a href="http://www.dawndiy.com">DawnDIY</a><br/>
本文地址：</strong><br/>
<strong>本文原创，如果转载请注明原文出处及原文地址，3Q</strong></p>

<p> </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 下搭建 Android 开发环境(图文)]]></title>
    <link href="http://dawndiy.github.com/archives/153"/>
    <updated>2012-07-31T00:00:00+08:00</updated>
    <id>http://dawndiy.github.com/archives/build-android-development-environment-in-ubuntu</id>
    <content type="html"><![CDATA[<h1></h1>

<p>随着智能手机、平板电脑等越来越普及，现在的移动平台开发越来越火，IOS、Android等等，以前一直没有开发过移动平台的应用，然而网上的N多教程全是Windows平台的，而我却坚持这Linux桌面，那么这么新鲜、这么火、这么有前景的开发，我也先起个头，把环境搭建起来先。</p>

<h2>1.安装JDK</h2>

<p>请看这里 > <a href="http://www.dawndiy.com/archives/155" title="Linux 下安装配置 JDK7">《Linux 下安装配置 JDK7》</a></p>

<h2>2.安装Eclipse</h2>

<p>现在Eclipse已经出4.2版本，并且官方也已经将4.x版作为默认的下载版本了，大家可以自己选择，下面给出4.x和3.7.x的下载链接：</p>

<p><strong>Eclipse Juno (4.2)：</strong><br/>
Windows    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2-201206081400/eclipse-SDK-4.2-win32.zip">32-bit</a>    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2-201206081400/eclipse-SDK-4.2-win32-x86_64.zip">64-bit</a><br/>
Mac    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2-201206081400/eclipse-SDK-4.2-macosx-cocoa.tar.gz">32-bit</a>    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2-201206081400/eclipse-SDK-4.2-macosx-cocoa-x86_64.tar.gz">64-bit</a><br/>
Linux    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2-201206081400/eclipse-SDK-4.2-linux-gtk.tar.gz">32-bit</a>    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2-201206081400/eclipse-SDK-4.2-linux-gtk-x86_64.tar.gz">64-bit</a><strong><br/>
</strong></p>

<p><strong>Eclipse Indigo (3.7)：</strong><br/>
Windows    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.7.2-201202080800/eclipse-SDK-3.7.2-win32.zip">32-bit</a>    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.7.2-201202080800/eclipse-SDK-3.7.2-win32-x86_64.zip">64-bit</a><br/>
Mac    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.7.2-201202080800/eclipse-SDK-3.7.2-macosx-cocoa.tar.gz">32-bit</a>    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.7.2-201202080800/eclipse-SDK-3.7.2-macosx-cocoa-x86_64.tar.gz">64-bit</a><br/>
Linux    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.7.2-201202080800/eclipse-SDK-3.7.2-linux-gtk.tar.gz">32-bit</a>    <a href="http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.7.2-201202080800/eclipse-SDK-3.7.2-linux-gtk-x86_64.tar.gz">64-bit</a></p>

<p>下载后解压到本地直接都可以使用了（在配置好JDK的前提下）。</p>

<h2>3.下载安装 Android SDK</h2>

<p>先下载好最新的 Android SDK Package。这里我给出下载地址：</p>

<p>Platform</p>

<p>Package</p>

<p>Size</p>

<p>MD5 Checksum</p>

<p>Windows</p>

<p><a href="http://dl.google.com/android/android-sdk_r20.0.1-windows.zip">android-sdk_r20.0.1-windows.zip</a></p>

<p>90370975 bytes</p>

<p>5774f536892036f87d3bf6502862cea5</p>

<p><a href="http://dl.google.com/android/installer_r20.0.1-windows.exe">installer_r20.0.1-windows.exe</a> (Recommended)</p>

<p>70486979 bytes</p>

<p>a8df28a29c7b8598e4c50f363692256d</p>

<p>Mac OS X (intel)</p>

<p><a href="http://dl.google.com/android/android-sdk_r20.0.1-macosx.zip">android-sdk_r20.0.1-macosx.zip</a></p>

<p>58217336 bytes</p>

<p>cc132d04bc551b23b0c507cf5943df57</p>

<p>Linux (i386)</p>

<p><a href="http://dl.google.com/android/android-sdk_r20.0.1-linux.tgz">android-sdk_r20.0.1-linux.tgz</a></p>

<p>82607616 bytes</p>

<p>cd7176831087f53e46123dd91551be32</p>

<p>官网下载地址：</p>

<p>下载好后当然是解压了，解压到您的工作目录，这个目录就是今后使用SDK的目录：</p>

<pre><code>tar zvxf android-sdk_r20.0.1-linux.tgz
</code></pre>

<p>解压找到 tools 目录下的 android 后如图：</p>

<p><img src="http://i.imgur.com/qtV6C.png" title="2012-07-31 10:08:30的屏幕截图" alt="" /></p>

<p> </p>

<p>这个就是 Android SDK Manager，你可以通过这个来配置、管理和下载最新的SDK。</p>

<p>首先我们先通过 Android SDK Manager 来添加平台和包，打开 Android SDK Manager 后勾选你需要的工具和包，这里 Android SDK Manager 会默认为您勾选它所推荐的包，您只需要点击下载安装就可以了。如图：</p>

<p><img src="http://i.imgur.com/kZRDG.png" title="2012-07-31 10:11:13的屏幕截图" alt="" /></p>

<h2>4.配置 Android SDK 开发调试环境</h2>

<p>在这里我们是要配置开发调试环境，以便我们在控制台能够很好的使用 SDK 。如果你只是希望使用 Eclipse 来做 Android 开发的话，这里也可以省略。不过我还是觉得控制台挺好的，虽然一片片的看着头晕，呵呵。</p>

<p>首先配置环境变量，和配置 JDK 一样。运行一下代码来配置环境变量：</p>

<pre><code>gedit ~/.bashrc
</code></pre>

<p>在文件的最末端添加下面内容：</p>

<pre><code># Android SDK
export ANDROID_SDK=/home/dawndiy/workspace/android/android-sdk-linux
export PATH=$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$PATH
</code></pre>

<p>当然， “ANDROID_SDK=” 后面的内容当然是你自己的 SDK 所在的目录啦，千万别照搬啊，上面的可是我电脑上的。修改好了以后记得保存，最后运行一下：</p>

<pre><code>source ~/.bashrc
</code></pre>

<p> </p>

<p>————更新————-</p>

<p>==这里是后来添加上的==</p>

<p>在之后的使用中我发现在控制台使用  adb 命令正常，但是有的时候需要 root 权限的时候我们再使用 sudo adb 的时候居然会提示 找不到 adb 命令。后来我找到了解决方法，这里说明一下：</p>

<pre><code>cd /usr/bin
rm -rf adb
sudo ln -s /home/dawndiy/workspace/android/android-sdk-linux/platform-tools/adb
</code></pre>

<p>这样就可以解决在 sudo 下也可以使用 adb 了，如果 fastboot 也有这样的情况，一样解决！</p>

<p>—————————–</p>

<p> </p>

<h2>5.安装 ADT(Android Development Tools) 插件</h2>

<p>打开 Eclipse，选择 <strong>Help</strong> > <strong>Install New Software…</strong>.</p>

<p>点击 <strong>Add</strong>，在 <strong>Name</strong> 输入 “ADT Plugin” 作为名字，在 <strong>Location</strong> 输入 “https://dl-ssl.google.com/android/eclipse/”(不要引号)，如图：</p>

<p><img src="http://i.imgur.com/jPRY9.png" title="2012-07-31 12:50:46的屏幕截图" alt="" /></p>

<p>添加好插件地址后，在 <strong>Work with</strong> 中选择刚才添加的插件地址，然后等待一会儿下面就会出现需要安装的插件。选择需要安装的插件后点击安装即可。如图：</p>

<p><img src="http://i.imgur.com/7Moeo.png" title="2012-07-31 12:57:59的屏幕截图" alt="" /></p>

<p>接下来就是等待下载安装，安装后了以后重启Eclipse即安装完成。</p>

<h2>6.配置 ADT 插件</h2>

<p>这里可能重启Eclipse后就会弹出ADT的配置对话框，如果没有弹出的话下面会介绍。</p>

<p>弹出的对话框如图，只需要把前面安装好的 Android SDK 的目录填入 <strong>Location</strong> 中就可以了。</p>

<p><img src="http://i.imgur.com/tssKQ.png" title="2012-07-31 13:15:48的屏幕截图" alt="" /></p>

<p>然后弹出一个问你是否愿意想Google反馈使用信息的对话框，Yes or No 随便，然后 Finish。</p>

<p><strong>如果没有弹出ADT配置对话框，那么我们如下操作来配置。</strong></p>

<p>打开 Eclipse ，选择 <strong>Window</strong> > <strong>Preferences…</strong> 来打开选项面板。</p>

<p>在左侧选择 <strong>Android</strong> ，在右侧面板中找到 <strong>SDK Location</strong> 点击 <strong>Browse…</strong> 来选择你前面安装的SDK目录，最后点击 <strong>Apply</strong> 即可。如图：</p>

<p><img src="http://i.imgur.com/9zpfS.png" title="2012-07-31 13:27:51的屏幕截图" alt="" /></p>

<p>这样您的ADT就基本配置完成了。最后为了保证您的插件是最新的，可以选择 <strong>Help</strong> > <strong>Check for Updates</strong> 让Eclipse自动检测需要更新的组件来更新。</p>

<h2>7.新建 AVD(android vitural device)</h2>

<p>开发的时候当然需要一台设备来做测试，Android SDK 的工具中提供了 Android 虚拟设备的功能，能够在本地虚拟一台 Android 设备。在正式开发之前，我们需要配置新建一个 AVD ，当然你可以使用前面安装好的 Android SDK Manager 来新建，这里我们也可以直接在已经配置好了的Eclipse里面进行添加。</p>

<p>选择 <strong>Windows > AVD Manager</strong> 点击 <strong>New</strong> 来新建一台 AVD ，然后在里面配备相应的参数，如图：</p>

<p><img src="http://i.imgur.com/3ypIG.png" title="2012-07-31 13:46:19的屏幕截图" alt="" /></p>

<p>点击 <strong>Create AVD</strong> 完成。</p>

<p>你可以在新建完成后在 AVD Manager 里面运行您刚才新建的虚拟设备，附上几幅图：</p>

<p><img src="http://i.imgur.com/xpi9z.png" title="2012-07-31 14:07:46的屏幕截图" alt="" /></p>

<p><img src="http://i.imgur.com/Hp9T3.png" title="2012-07-31 14:11:01的屏幕截图" alt="" /></p>

<h2>8.新建 Android 项目</h2>

<p>打开 Eclipse ， <strong>File > New > Other…</strong> 选择 Android Application Project 后，就会出现向导对话框，然后更具向导填好相关信息，最后就可以生成一个 Android 项目，如图：</p>

<p><img src="http://i.imgur.com/ndSpv.png" title="2012-07-31 16:20:49的屏幕截图" alt="" /></p>

<p>填写应用名、项目名、包名等信息，还有选择构建的SDK版本。</p>

<p><img src="http://i.imgur.com/wZGpZ.png" title="2012-07-31 14:21:57的屏幕截图" alt="" /></p>

<p>设置应用的图标：</p>

<p><img src="http://i.imgur.com/HjUCR.png" title="2012-07-31 14:23:03的屏幕截图" alt="" /></p>

<p><img src="http://i.imgur.com/2CK0b.png" title="2012-07-31 14:25:32的屏幕截图" alt="" /></p>

<p>完成新建 Android 项目：</p>

<p><img src="http://i.imgur.com/ISKJf.png" title="2012-07-31 16:14:08的屏幕截图" alt="" /></p>

<p>项目建立好后，默认给出的是一个示例，我们直接运行一下看能否运行，点击工具栏的绿色运行按钮或者键盘 Ctrl F11 。运行效果如下：</p>

<p><img src="http://i.imgur.com/fl8sA.png" title="2012-07-31 16:13:23的屏幕截图" alt="" /></p>

<p>这样，我们的环境就配置完成了！</p>

<h2>9.总结</h2>

<p>一直都想去尝试开发一款自己的Android程序，但是一直都没有去学，趁今天下午有时间，参考了官方的文档，自己摸索的搭建了一下开发环境，算一个开头。接下来就慢慢的学习吧～ Over………………….</p>
]]></content>
  </entry>
  
</feed>
